/*
* Clase: Scrapear
*
* Version: 1.0
* 
* Fecha de creación: 2020-09-04
*
* Autor: Angie Benavides y Deicy León
 */
package cecar.edu.vista;

import cecar.edu.componentesHelp.ConectarMySQL;
import cecar.edu.controlador.ControlScrapeo;
import cecar.edu.controlador.ControladorPersistencia;
import cecar.edu.controlador.ControladorTendecias;
import cecar.edu.modelo.Articulo;
import cecar.edu.modelo.Palabra;
import java.awt.Cursor;
import java.io.IOException;
import java.net.HttpURLConnection;
import java.net.InetAddress;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLConnection;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.validator.UrlValidator;

public class Scrapear extends javax.swing.JFrame {

    DefaultTableModel modelo;

    /**
     * Creates new form Scrapear
     */
    public Scrapear() throws Exception {
        initComponents();
        this.setTitle("Scrapear Medios Inf.");
        jRadioButtonModificar.setVisible(false);
        cargarTablaUrl("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jTextFieldUrl = new javax.swing.JTextField();
        jButtonAgregar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableUrls = new javax.swing.JTable();
        jButtonEliminar = new javax.swing.JButton();
        jButtonEditar = new javax.swing.JButton();
        jButtonCancelar = new javax.swing.JButton();
        jRadioButtonModificar = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jComboBoxUrls = new javax.swing.JComboBox<>();
        jLabelUrlScrapear = new javax.swing.JLabel();
        jButtonScraper = new javax.swing.JButton();
        jLabelprogreso = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableScraper = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jLabelTitulo = new javax.swing.JLabel();
        jTextFieldPTitulo = new javax.swing.JTextField();
        jLabelPcontenido = new javax.swing.JLabel();
        jTextFieldPContenido = new javax.swing.JTextField();
        jTextFieldPalabra = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButtonBuscar = new javax.swing.JButton();
        jButtonNuevo = new javax.swing.JButton();
        jLabelTendecia = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTendencias = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jPanel1.setLayout(null);
        jPanel1.add(jTextFieldUrl);
        jTextFieldUrl.setBounds(10, 60, 290, 30);

        jButtonAgregar.setText("Agregar");
        jButtonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAgregarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonAgregar);
        jButtonAgregar.setBounds(10, 10, 90, 30);

        jTableUrls.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableUrls.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableUrlsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableUrls);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(10, 90, 290, 110);

        jButtonEliminar.setText("Eliminar");
        jButtonEliminar.setEnabled(false);
        jButtonEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEliminarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEliminar);
        jButtonEliminar.setBounds(110, 10, 90, 30);

        jButtonEditar.setText("Editar");
        jButtonEditar.setEnabled(false);
        jButtonEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonEditar);
        jButtonEditar.setBounds(210, 10, 90, 30);

        jButtonCancelar.setText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonCancelar);
        jButtonCancelar.setBounds(210, 200, 90, 30);

        jRadioButtonModificar.setText("Modificar");
        jRadioButtonModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButtonModificarActionPerformed(evt);
            }
        });
        jPanel1.add(jRadioButtonModificar);
        jRadioButtonModificar.setBounds(210, 40, 93, 23);

        jTabbedPane1.addTab("Gestionar URLs", jPanel1);

        jPanel2.setLayout(null);

        jComboBoxUrls.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel2.add(jComboBoxUrls);
        jComboBoxUrls.setBounds(10, 29, 290, 30);

        jLabelUrlScrapear.setText("URL a scrapear:");
        jPanel2.add(jLabelUrlScrapear);
        jLabelUrlScrapear.setBounds(10, 10, 120, 14);

        jButtonScraper.setText("Scrapear");
        jButtonScraper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonScraperActionPerformed(evt);
            }
        });
        jPanel2.add(jButtonScraper);
        jButtonScraper.setBounds(10, 70, 100, 30);

        jLabelprogreso.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabelprogreso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel2.add(jLabelprogreso);
        jLabelprogreso.setBounds(110, 70, 210, 30);

        jTableScraper.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane3.setViewportView(jTableScraper);

        jPanel2.add(jScrollPane3);
        jScrollPane3.setBounds(10, 110, 310, 120);

        jTabbedPane1.addTab("Scrapear", jPanel2);

        jPanel3.setLayout(null);

        jLabelTitulo.setText("Peso titulo:");
        jPanel3.add(jLabelTitulo);
        jLabelTitulo.setBounds(10, 10, 110, 14);

        jTextFieldPTitulo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPTituloKeyTyped(evt);
            }
        });
        jPanel3.add(jTextFieldPTitulo);
        jTextFieldPTitulo.setBounds(10, 30, 120, 30);

        jLabelPcontenido.setText("Peso contenido");
        jPanel3.add(jLabelPcontenido);
        jLabelPcontenido.setBounds(170, 10, 90, 20);

        jTextFieldPContenido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextFieldPContenidoKeyTyped(evt);
            }
        });
        jPanel3.add(jTextFieldPContenido);
        jTextFieldPContenido.setBounds(170, 30, 120, 30);
        jPanel3.add(jTextFieldPalabra);
        jTextFieldPalabra.setBounds(10, 90, 120, 30);

        jLabel2.setText("Palabra:");
        jPanel3.add(jLabel2);
        jLabel2.setBounds(10, 70, 110, 20);

        jButtonBuscar.setText("Buscar");
        jButtonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBuscarActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonBuscar);
        jButtonBuscar.setBounds(170, 90, 120, 30);

        jButtonNuevo.setText("Nueva tendencia");
        jButtonNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonNuevoActionPerformed(evt);
            }
        });
        jPanel3.add(jButtonNuevo);
        jButtonNuevo.setBounds(190, 200, 120, 30);

        jLabelTendecia.setText("La tendecia es: ");
        jPanel3.add(jLabelTendecia);
        jLabelTendecia.setBounds(10, 120, 280, 40);

        jTableTendencias.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableTendencias);

        jPanel3.add(jScrollPane2);
        jScrollPane2.setBounds(10, 160, 160, 70);

        jTabbedPane1.addTab("Consulta tendencia", jPanel3);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(19, 11, 330, 270);

        setSize(new java.awt.Dimension(382, 333));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAgregarActionPerformed

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String url = jTextFieldUrl.getText();
        String validoR;//variable para guardar el estado de la consulta, si fué o no correcta
        if (urlValidator(url)) {
            if (eSconexionValida(url)) {
                //aquí se se manda a las sentencias sql para el registro de la url a la BD
                validoR = ControladorPersistencia.guardarUrl(url);
                if (validoR.equals("OK")) {
                    try {
                        cargarTablaUrl("");
                        JOptionPane.showMessageDialog(null, "Agregado con exito");
                        jTextFieldUrl.setText("");
                    } catch (Exception ex) {
                        Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            } else {
                JOptionPane.showMessageDialog(null, "Direccion URL no valida, o verifica tu conexión");
                try {
                    cargarTablaUrl("");
                } catch (Exception ex) {
                    Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Sintaxis url incorrecta");
            try {
                cargarTablaUrl("");
            } catch (Exception ex) {
                Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_jButtonAgregarActionPerformed

    String idUrl;
    private void jTableUrlsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableUrlsMouseClicked
        // TODO add your handling code here:
        int seleccion = jTableUrls.rowAtPoint(evt.getPoint());
        idUrl = String.valueOf(jTableUrls.getValueAt(seleccion, 0));
        jTextFieldUrl.setText(idUrl);
        jButtonEliminar.setEnabled(true);
        jButtonAgregar.setEnabled(false);
        jRadioButtonModificar.setVisible(true);
        jTextFieldUrl.setEnabled(false);
        jButtonEditar.setEnabled(false);
        jRadioButtonModificar.setVisible(true);
        jRadioButtonModificar.setSelected(false);
    }//GEN-LAST:event_jTableUrlsMouseClicked

    private void jRadioButtonModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButtonModificarActionPerformed
        // TODO add your handling code here:
        if (jRadioButtonModificar.isSelected()) {
            jButtonEditar.setEnabled(true);
            jTextFieldUrl.setEnabled(true);
            jButtonEliminar.setEnabled(false);

            jRadioButtonModificar.setVisible(false);
        } else {
            jButtonEditar.setEnabled(false);

        }
    }//GEN-LAST:event_jRadioButtonModificarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        jButtonAgregar.setEnabled(true);
        jButtonEditar.setEnabled(false);
        jButtonEliminar.setEnabled(false);
        jRadioButtonModificar.setVisible(false);
        jTextFieldUrl.setText("");
        jTextFieldUrl.setEnabled(true);
        try {
            cargarTablaUrl("");
        } catch (Exception ex) {
            Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jButtonCancelarActionPerformed

    private void jButtonEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEliminarActionPerformed
        // TODO add your handling code here:
        int n1 = JOptionPane.showConfirmDialog(null, "¿Está seguro que desea eliminar URL?\n"
                + "",
                "An Inane Question",
                JOptionPane.YES_NO_OPTION);

        if (0 == n1) {
            try {
                int n = ControladorPersistencia.eliminarUrl(idUrl);
                if (n > 0) {
                    JOptionPane.showMessageDialog(null, "Eliminado exitoso");
                    jButtonAgregar.setEnabled(true);
                    jButtonEditar.setEnabled(false);
                    jButtonEliminar.setEnabled(false);
                    jRadioButtonModificar.setVisible(false);
                    jTextFieldUrl.setText("");
                    jTextFieldUrl.setEnabled(true);
                    jTextFieldUrl.requestFocus();
                    try {
                        cargarTablaUrl("");
                    } catch (Exception ex) {
                        Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    jTextFieldUrl.requestFocus();
                }
                cargarTablaUrl("");
            } catch (Exception ex) {
                Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "OK");
        }

    }//GEN-LAST:event_jButtonEliminarActionPerformed

    private void jButtonEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditarActionPerformed

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        String urlNueva = jTextFieldUrl.getText();
        String urlAntigua = idUrl;
        if (urlValidator(urlNueva)) {
            if (eSconexionValida(urlNueva)) {
                try {
                    int n = ControladorPersistencia.modificarUrl(urlNueva, urlAntigua);
                    if (n > 0) {
                        JOptionPane.showMessageDialog(null, "Modificación exitosa ");
                        jButtonAgregar.setEnabled(true);
                        jButtonEditar.setEnabled(false);
                        jButtonEliminar.setEnabled(false);
                        jRadioButtonModificar.setVisible(false);
                        jTextFieldUrl.setText("");
                        jTextFieldUrl.setEnabled(true);
                        jTextFieldUrl.requestFocus();
                        try {
                            cargarTablaUrl("");
                        } catch (Exception ex) {
                            Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }

                    cargarTablaUrl("");
                } catch (Exception ex) {
                    Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {

                JOptionPane.showMessageDialog(null, "Direccion URL no valida, o verifica tu conexión");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sintasis de url incorrecta");
        }
        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));


    }//GEN-LAST:event_jButtonEditarActionPerformed

    private void jButtonScraperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonScraperActionPerformed

        String urlScrapear = jComboBoxUrls.getSelectedItem().toString();
        String url1 = "https://www.elespectador.com";
        String url2 = "https://www.elnuevosiglo.com.co";

        this.setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        if (urlScrapear.contains(url1)) {
            jLabelprogreso.setText("Scrapeando...");
            ControlScrapeo.scrapearSitioEspectador(urlScrapear);
            cargarTableArticuloScrap();
        }
        if (urlScrapear.contains(url2)) {
            
            jLabelprogreso.setText("Scrapeando...");
            ControlScrapeo.scrapearSitioElNuevoSiglo(url2);
            cargarTableArticuloScrap();
        }

        this.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
        jLabelprogreso.setText("Listo!!");
    }//GEN-LAST:event_jButtonScraperActionPerformed

    private void jButtonNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonNuevoActionPerformed
        // TODO add your handling code here:
        jTextFieldPTitulo.setText("");
        jTextFieldPContenido.setText("");
        jTextFieldPTitulo.setEnabled(true);
        jTextFieldPContenido.setEnabled(true);
        jLabelTendecia.setText("Tendencia: ");
        for(int i=0;i<ControladorTendecias.palabras.size();i++){
        ControladorTendecias.palabras.remove(i);        
        }
        cargarTablaTendencias();

    }//GEN-LAST:event_jButtonNuevoActionPerformed

    private void jButtonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBuscarActionPerformed
        String pesoTitulo = jTextFieldPTitulo.getText().trim();
        String pesoContenido = jTextFieldPContenido.getText().trim();
        String palabra = jTextFieldPalabra.getText().trim().toLowerCase();
        Palabra tendencia = new Palabra();
        if (!pesoTitulo.equals("")) {
            if (!pesoContenido.equals("")) {
                jTextFieldPTitulo.setEnabled(false);
                jTextFieldPContenido.setEnabled(false);
                for (int i = 0; i < ControlScrapeo.articulos.size(); i++) {
                    tendencia =ControladorTendecias.tendencia(ControlScrapeo.articulos.get(i).getTitulo().toLowerCase(), convertirArrayACadena(ControlScrapeo.articulos.get(i).getContenido()), palabra, Integer.parseInt(pesoTitulo), Integer.parseInt(pesoContenido));
                }
                jLabelTendecia.setText("Tendencia: " + tendencia.getPalabra()+" Peso= "+tendencia.getPesoTotal());
                cargarTablaTendencias();
            } else {
                JOptionPane.showMessageDialog(null, "Por favor ingrese peso contenido");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Por favor ingrese peso titulo");
        }
    }//GEN-LAST:event_jButtonBuscarActionPerformed

    public String convertirArrayACadena(ArrayList<String> array) {
        String cadena = "";
        for (int i = 0; i < array.size(); i++) {
            cadena = cadena + " " + array.get(i).toUpperCase();
        }
        return cadena.toLowerCase();
    }
    private void jTextFieldPTituloKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPTituloKeyTyped

        //Validacion de numeros.
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo números");
        }

    }//GEN-LAST:event_jTextFieldPTituloKeyTyped

    private void jTextFieldPContenidoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldPContenidoKeyTyped
        // TODO add your handling code here:
        //Validacion de numeros.
        char validar = evt.getKeyChar();
        if (Character.isLetter(validar)) {
            getToolkit().beep();
            evt.consume();
            JOptionPane.showMessageDialog(null, "Ingrese solo números");
        }

    }//GEN-LAST:event_jTextFieldPContenidoKeyTyped

    private void cargarTablaTendencias(){
        //vector para poner el titulo en el JTable
        String[] titulos = {"Tendencia","Peso"};
        //vector para asignar el N° de las columnas de JTtable
        String[] registros = new String[2];
        //agrega el modelo antes asignado en los vectores anteriores
        modelo = new DefaultTableModel(null, titulos);
        
        for (int a = 0;a<ControladorTendecias.palabras.size();a++) {
            try{
            registros[0] = ControladorTendecias.palabras.get(a).getPalabra();
            registros[1] = String.valueOf(ControladorTendecias.palabras.get(a).getPesoTotal());
          
            modelo.addRow(registros);
            }catch(ArrayIndexOutOfBoundsException e){
                System.out.println("Error: "+e.getMessage());
            }
        }

        jTableTendencias.setModel(modelo); 
    }
    private void cargarComboboxUrls() {

        jComboBoxUrls.removeAllItems();
        ArrayList<String> lista = new ArrayList<String>();
        lista = ControladorPersistencia.consulta;
        jComboBoxUrls.addItem("Seleccione URL...");
        for (int i = 0; i < lista.size(); i++) {
            jComboBoxUrls.addItem(lista.get(i));
        }
    }
    public void cargarTableArticuloScrap(){
      //vector para poner el titulo en el JTableUrls
        String[] titulos = {"Titulo","Fecha"};
        //vector para asignar el N° de las columnas de JTtable
        String[] registros = new String[3];
        //agrega el modelo antes asignado en los vectores anteriores
        modelo = new DefaultTableModel(null, titulos);
        
        for (int a = 0;a<ControlScrapeo.articulos.size();a++) {
            try{
            registros[0] = ControlScrapeo.articulos.get(a).getTitulo();
            registros[1] = ControlScrapeo.articulos.get(a).getFechaDePublicacion();
           // registros[2] = ControlScrapeo.articulos.get(a).getContenido().get(1);
            modelo.addRow(registros);
            }catch(ArrayIndexOutOfBoundsException e){
                System.out.println("Error: "+e.getMessage());
            }
        }

        jTableScraper.setModel(modelo); 
    }

    //Esta funcion carga los registros en el JTableUrls, pero primero trae los datos de la BD
    void cargarTablaUrl(String valor) throws Exception {

        //vector para poner el titulo en el JTableUrls
        String[] titulos = {"URLs"};
        //vector para asignar el N° de las columnas de JTtable
        String[] registros = new String[1];
        //agrega el modelo antes asignado en los vectores anteriores
        modelo = new DefaultTableModel(null, titulos);

        //ArrayList para almacenar los datos que retorna la consulta sql
        ArrayList<String> consulta = new ArrayList();
        consulta = ControladorPersistencia.consulta(valor);

        int a = consulta.size();
        while (a != 0) {
            a--;
            registros[0] = consulta.get(a);
            modelo.addRow(registros);
        }

        jTableUrls.setModel(modelo);

        cargarComboboxUrls();
    }

    //Funcion para ver si la conexion con la url es valida
    private static boolean eSconexionValida(String urlE) {

        int a = 0;
        try {
            URL u = new URL(urlE);
            HttpURLConnection huc = (HttpURLConnection) u.openConnection();
            huc.setRequestMethod("GET");
            huc.connect();
            a = huc.getResponseCode();

        } catch (MalformedURLException ex) {
            Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            // JOptionPane.showMessageDialog(null, "Ocurrio un error");
            a = 404;
        }
        return a != 404;
    }

    //Funcion para verificar la sintaxis de una url
    public static boolean urlValidator(String url) {
        //validación de url

        UrlValidator defaultValidator = new UrlValidator();
        return defaultValidator.isValid(url);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws Exception {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Scrapear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Scrapear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Scrapear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Scrapear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new Scrapear().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Scrapear.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });

        //Al inicializar la GUI luego se hace la conexion a la BD
        ConectarMySQL.getConectarMySQL();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAgregar;
    private javax.swing.JButton jButtonBuscar;
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonEditar;
    private javax.swing.JButton jButtonEliminar;
    private javax.swing.JButton jButtonNuevo;
    private javax.swing.JButton jButtonScraper;
    private javax.swing.JComboBox<String> jComboBoxUrls;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelPcontenido;
    private javax.swing.JLabel jLabelTendecia;
    private javax.swing.JLabel jLabelTitulo;
    private javax.swing.JLabel jLabelUrlScrapear;
    private javax.swing.JLabel jLabelprogreso;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButtonModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableScraper;
    private javax.swing.JTable jTableTendencias;
    private javax.swing.JTable jTableUrls;
    private javax.swing.JTextField jTextFieldPContenido;
    private javax.swing.JTextField jTextFieldPTitulo;
    private javax.swing.JTextField jTextFieldPalabra;
    private javax.swing.JTextField jTextFieldUrl;
    // End of variables declaration//GEN-END:variables
}
